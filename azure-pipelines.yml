variables:
  ConnectedServiceName: 'prueba pipeline deploy'
  WebAppName: 'prueba-flaskpipline'
  python.version: '3.6'

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'


steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: x64
  displayName: 'Use Python $(python.version)'

- script: |
    python -m venv venv
    source /venv/bin/activate
    python -m pip install --upgrade pip
    python -m pip install setuptools 
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pip install flake8
    flake8 .
  displayName: flake8 linting *.py files

#html is skipped
- script: |
    pip install pytest-cov
    pytest test_test1.py --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
  displayName: pytest evaluate tests.
  
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # (no value); this input is optional

- task: AzureWebApp@1
  displayName: 'Deploy Azure Web App : {{ webAppName }}'
  inputs:
    appType: webAppLinux
    azureSubscription: $(ConnectedServiceName)
    appName: $(webAppName)
    package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'